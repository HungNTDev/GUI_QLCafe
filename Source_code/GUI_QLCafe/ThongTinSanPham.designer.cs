#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI_QLCafe
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_CAFE")]
	public partial class ThongTinSanPhamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertDetailBill(DetailBill instance);
    partial void UpdateDetailBill(DetailBill instance);
    partial void DeleteDetailBill(DetailBill instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTableCF(TableCF instance);
    partial void UpdateTableCF(TableCF instance);
    partial void DeleteTableCF(TableCF instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    #endregion
		
		public ThongTinSanPhamDataContext() : 
				base(global::GUI_QLCafe.Properties.Settings.Default.QL_CAFEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ThongTinSanPhamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThongTinSanPhamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThongTinSanPhamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThongTinSanPhamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<DetailBill> DetailBills
		{
			get
			{
				return this.GetTable<DetailBill>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<TableCF> TableCFs
		{
			get
			{
				return this.GetTable<TableCF>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdBill;
		
		private string _IdPayment;
		
		private string _IdTable;
		
		private string _IdStaff;
		
		private string _IdVoucher;
		
		private int _StatusBill;
		
		private EntitySet<DetailBill> _DetailBills;
		
		private EntityRef<Payment> _Payment;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<TableCF> _TableCF;
		
		private EntityRef<Voucher> _Voucher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBillChanging(string value);
    partial void OnIdBillChanged();
    partial void OnIdPaymentChanging(string value);
    partial void OnIdPaymentChanged();
    partial void OnIdTableChanging(string value);
    partial void OnIdTableChanged();
    partial void OnIdStaffChanging(string value);
    partial void OnIdStaffChanged();
    partial void OnIdVoucherChanging(string value);
    partial void OnIdVoucherChanged();
    partial void OnStatusBillChanging(int value);
    partial void OnStatusBillChanged();
    #endregion
		
		public Bill()
		{
			this._DetailBills = new EntitySet<DetailBill>(new Action<DetailBill>(this.attach_DetailBills), new Action<DetailBill>(this.detach_DetailBills));
			this._Payment = default(EntityRef<Payment>);
			this._Staff = default(EntityRef<Staff>);
			this._TableCF = default(EntityRef<TableCF>);
			this._Voucher = default(EntityRef<Voucher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBill", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdBill
		{
			get
			{
				return this._IdBill;
			}
			set
			{
				if ((this._IdBill != value))
				{
					this.OnIdBillChanging(value);
					this.SendPropertyChanging();
					this._IdBill = value;
					this.SendPropertyChanged("IdBill");
					this.OnIdBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPayment", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string IdPayment
		{
			get
			{
				return this._IdPayment;
			}
			set
			{
				if ((this._IdPayment != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaymentChanging(value);
					this.SendPropertyChanging();
					this._IdPayment = value;
					this.SendPropertyChanged("IdPayment");
					this.OnIdPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTable", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string IdTable
		{
			get
			{
				return this._IdTable;
			}
			set
			{
				if ((this._IdTable != value))
				{
					if (this._TableCF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTableChanging(value);
					this.SendPropertyChanging();
					this._IdTable = value;
					this.SendPropertyChanged("IdTable");
					this.OnIdTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVoucher", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string IdVoucher
		{
			get
			{
				return this._IdVoucher;
			}
			set
			{
				if ((this._IdVoucher != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVoucherChanging(value);
					this.SendPropertyChanging();
					this._IdVoucher = value;
					this.SendPropertyChanged("IdVoucher");
					this.OnIdVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusBill", DbType="Int NOT NULL")]
		public int StatusBill
		{
			get
			{
				return this._StatusBill;
			}
			set
			{
				if ((this._StatusBill != value))
				{
					this.OnStatusBillChanging(value);
					this.SendPropertyChanging();
					this._StatusBill = value;
					this.SendPropertyChanged("StatusBill");
					this.OnStatusBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBill", Storage="_DetailBills", ThisKey="IdBill", OtherKey="IdBill")]
		public EntitySet<DetailBill> DetailBills
		{
			get
			{
				return this._DetailBills;
			}
			set
			{
				this._DetailBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Bill", Storage="_Payment", ThisKey="IdPayment", OtherKey="IdPayment", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdPayment = value.IdPayment;
					}
					else
					{
						this._IdPayment = default(string);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Staff", ThisKey="IdStaff", OtherKey="IdStaff", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdStaff = value.IdStaff;
					}
					else
					{
						this._IdStaff = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCF_Bill", Storage="_TableCF", ThisKey="IdTable", OtherKey="IdTable", IsForeignKey=true)]
		public TableCF TableCF
		{
			get
			{
				return this._TableCF.Entity;
			}
			set
			{
				TableCF previousValue = this._TableCF.Entity;
				if (((previousValue != value) 
							|| (this._TableCF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableCF.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._TableCF.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdTable = value.IdTable;
					}
					else
					{
						this._IdTable = default(string);
					}
					this.SendPropertyChanged("TableCF");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Bill", Storage="_Voucher", ThisKey="IdVoucher", OtherKey="IdVoucher", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdVoucher = value.IdVoucher;
					}
					else
					{
						this._IdVoucher = default(string);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailBill")]
	public partial class DetailBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdBill;
		
		private string _IdProduct;
		
		private double _TotalPrice;
		
		private int _Amount;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBillChanging(string value);
    partial void OnIdBillChanged();
    partial void OnIdProductChanging(string value);
    partial void OnIdProductChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    #endregion
		
		public DetailBill()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBill", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdBill
		{
			get
			{
				return this._IdBill;
			}
			set
			{
				if ((this._IdBill != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBillChanging(value);
					this.SendPropertyChanging();
					this._IdBill = value;
					this.SendPropertyChanged("IdBill");
					this.OnIdBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBill", Storage="_Bill", ThisKey="IdBill", OtherKey="IdBill", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.DetailBills.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.DetailBills.Add(this);
						this._IdBill = value.IdBill;
					}
					else
					{
						this._IdBill = default(string);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailBill", Storage="_Product", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DetailBills.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DetailBills.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdPayment;
		
		private string _TypePayment;
		
		private int _StatusPayment;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaymentChanging(string value);
    partial void OnIdPaymentChanged();
    partial void OnTypePaymentChanging(string value);
    partial void OnTypePaymentChanged();
    partial void OnStatusPaymentChanging(int value);
    partial void OnStatusPaymentChanged();
    #endregion
		
		public Payment()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPayment", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPayment
		{
			get
			{
				return this._IdPayment;
			}
			set
			{
				if ((this._IdPayment != value))
				{
					this.OnIdPaymentChanging(value);
					this.SendPropertyChanging();
					this._IdPayment = value;
					this.SendPropertyChanged("IdPayment");
					this.OnIdPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypePayment", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TypePayment
		{
			get
			{
				return this._TypePayment;
			}
			set
			{
				if ((this._TypePayment != value))
				{
					this.OnTypePaymentChanging(value);
					this.SendPropertyChanging();
					this._TypePayment = value;
					this.SendPropertyChanged("TypePayment");
					this.OnTypePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusPayment", DbType="Int NOT NULL")]
		public int StatusPayment
		{
			get
			{
				return this._StatusPayment;
			}
			set
			{
				if ((this._StatusPayment != value))
				{
					this.OnStatusPaymentChanging(value);
					this.SendPropertyChanging();
					this._StatusPayment = value;
					this.SendPropertyChanged("StatusPayment");
					this.OnStatusPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Bill", Storage="_Bills", ThisKey="IdPayment", OtherKey="IdPayment")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdProduct;
		
		private string _NameProduct;
		
		private double _Price;
		
		private string _ImageProduct;
		
		private int _StatusProduct;
		
		private string _IdPT;
		
		private EntitySet<DetailBill> _DetailBills;
		
		private EntityRef<ProductType> _ProductType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductChanging(string value);
    partial void OnIdProductChanged();
    partial void OnNameProductChanging(string value);
    partial void OnNameProductChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnImageProductChanging(string value);
    partial void OnImageProductChanged();
    partial void OnStatusProductChanging(int value);
    partial void OnStatusProductChanged();
    partial void OnIdPTChanging(string value);
    partial void OnIdPTChanged();
    #endregion
		
		public Product()
		{
			this._DetailBills = new EntitySet<DetailBill>(new Action<DetailBill>(this.attach_DetailBills), new Action<DetailBill>(this.detach_DetailBills));
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameProduct", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameProduct
		{
			get
			{
				return this._NameProduct;
			}
			set
			{
				if ((this._NameProduct != value))
				{
					this.OnNameProductChanging(value);
					this.SendPropertyChanging();
					this._NameProduct = value;
					this.SendPropertyChanged("NameProduct");
					this.OnNameProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageProduct", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ImageProduct
		{
			get
			{
				return this._ImageProduct;
			}
			set
			{
				if ((this._ImageProduct != value))
				{
					this.OnImageProductChanging(value);
					this.SendPropertyChanging();
					this._ImageProduct = value;
					this.SendPropertyChanged("ImageProduct");
					this.OnImageProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusProduct", DbType="Int NOT NULL")]
		public int StatusProduct
		{
			get
			{
				return this._StatusProduct;
			}
			set
			{
				if ((this._StatusProduct != value))
				{
					this.OnStatusProductChanging(value);
					this.SendPropertyChanging();
					this._StatusProduct = value;
					this.SendPropertyChanged("StatusProduct");
					this.OnStatusProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPT", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string IdPT
		{
			get
			{
				return this._IdPT;
			}
			set
			{
				if ((this._IdPT != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPTChanging(value);
					this.SendPropertyChanging();
					this._IdPT = value;
					this.SendPropertyChanged("IdPT");
					this.OnIdPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailBill", Storage="_DetailBills", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<DetailBill> DetailBills
		{
			get
			{
				return this._DetailBills;
			}
			set
			{
				this._DetailBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="IdPT", OtherKey="IdPT", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._IdPT = value.IdPT;
					}
					else
					{
						this._IdPT = default(string);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductType")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdPT;
		
		private string _NamePT;
		
		private int _StatusPT;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPTChanging(string value);
    partial void OnIdPTChanged();
    partial void OnNamePTChanging(string value);
    partial void OnNamePTChanged();
    partial void OnStatusPTChanging(int value);
    partial void OnStatusPTChanged();
    #endregion
		
		public ProductType()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPT", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPT
		{
			get
			{
				return this._IdPT;
			}
			set
			{
				if ((this._IdPT != value))
				{
					this.OnIdPTChanging(value);
					this.SendPropertyChanging();
					this._IdPT = value;
					this.SendPropertyChanged("IdPT");
					this.OnIdPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamePT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NamePT
		{
			get
			{
				return this._NamePT;
			}
			set
			{
				if ((this._NamePT != value))
				{
					this.OnNamePTChanging(value);
					this.SendPropertyChanging();
					this._NamePT = value;
					this.SendPropertyChanged("NamePT");
					this.OnNamePTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusPT", DbType="Int NOT NULL")]
		public int StatusPT
		{
			get
			{
				return this._StatusPT;
			}
			set
			{
				if ((this._StatusPT != value))
				{
					this.OnStatusPTChanging(value);
					this.SendPropertyChanging();
					this._StatusPT = value;
					this.SendPropertyChanged("StatusPT");
					this.OnStatusPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="IdPT", OtherKey="IdPT")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IdStaff;
		
		private string _FullName;
		
		private string _ImageStaff;
		
		private string _Email;
		
		private string _PasswordStaff;
		
		private int _RoleStaff;
		
		private int _StatusStaff;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdStaffChanging(string value);
    partial void OnIdStaffChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnImageStaffChanging(string value);
    partial void OnImageStaffChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordStaffChanging(string value);
    partial void OnPasswordStaffChanged();
    partial void OnRoleStaffChanging(int value);
    partial void OnRoleStaffChanged();
    partial void OnStatusStaffChanging(int value);
    partial void OnStatusStaffChanged();
    #endregion
		
		public Staff()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageStaff", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ImageStaff
		{
			get
			{
				return this._ImageStaff;
			}
			set
			{
				if ((this._ImageStaff != value))
				{
					this.OnImageStaffChanging(value);
					this.SendPropertyChanging();
					this._ImageStaff = value;
					this.SendPropertyChanged("ImageStaff");
					this.OnImageStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordStaff", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PasswordStaff
		{
			get
			{
				return this._PasswordStaff;
			}
			set
			{
				if ((this._PasswordStaff != value))
				{
					this.OnPasswordStaffChanging(value);
					this.SendPropertyChanging();
					this._PasswordStaff = value;
					this.SendPropertyChanged("PasswordStaff");
					this.OnPasswordStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleStaff", DbType="Int NOT NULL")]
		public int RoleStaff
		{
			get
			{
				return this._RoleStaff;
			}
			set
			{
				if ((this._RoleStaff != value))
				{
					this.OnRoleStaffChanging(value);
					this.SendPropertyChanging();
					this._RoleStaff = value;
					this.SendPropertyChanged("RoleStaff");
					this.OnRoleStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusStaff", DbType="Int NOT NULL")]
		public int StatusStaff
		{
			get
			{
				return this._StatusStaff;
			}
			set
			{
				if ((this._StatusStaff != value))
				{
					this.OnStatusStaffChanging(value);
					this.SendPropertyChanging();
					this._StatusStaff = value;
					this.SendPropertyChanged("StatusStaff");
					this.OnStatusStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Bills", ThisKey="IdStaff", OtherKey="IdStaff")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableCF")]
	public partial class TableCF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdTable;
		
		private string _NameTable;
		
		private int _StatusTable;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTableChanging(string value);
    partial void OnIdTableChanged();
    partial void OnNameTableChanging(string value);
    partial void OnNameTableChanged();
    partial void OnStatusTableChanging(int value);
    partial void OnStatusTableChanged();
    #endregion
		
		public TableCF()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTable", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdTable
		{
			get
			{
				return this._IdTable;
			}
			set
			{
				if ((this._IdTable != value))
				{
					this.OnIdTableChanging(value);
					this.SendPropertyChanging();
					this._IdTable = value;
					this.SendPropertyChanged("IdTable");
					this.OnIdTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTable", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NameTable
		{
			get
			{
				return this._NameTable;
			}
			set
			{
				if ((this._NameTable != value))
				{
					this.OnNameTableChanging(value);
					this.SendPropertyChanging();
					this._NameTable = value;
					this.SendPropertyChanged("NameTable");
					this.OnNameTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusTable", DbType="Int NOT NULL")]
		public int StatusTable
		{
			get
			{
				return this._StatusTable;
			}
			set
			{
				if ((this._StatusTable != value))
				{
					this.OnStatusTableChanging(value);
					this.SendPropertyChanging();
					this._StatusTable = value;
					this.SendPropertyChanged("StatusTable");
					this.OnStatusTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCF_Bill", Storage="_Bills", ThisKey="IdTable", OtherKey="IdTable")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.TableCF = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.TableCF = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdVoucher;
		
		private string _NameVoucher;
		
		private int _PercentVoucher;
		
		private int _StatusVoucher;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVoucherChanging(string value);
    partial void OnIdVoucherChanged();
    partial void OnNameVoucherChanging(string value);
    partial void OnNameVoucherChanged();
    partial void OnPercentVoucherChanging(int value);
    partial void OnPercentVoucherChanged();
    partial void OnStatusVoucherChanging(int value);
    partial void OnStatusVoucherChanged();
    #endregion
		
		public Voucher()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVoucher", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdVoucher
		{
			get
			{
				return this._IdVoucher;
			}
			set
			{
				if ((this._IdVoucher != value))
				{
					this.OnIdVoucherChanging(value);
					this.SendPropertyChanging();
					this._IdVoucher = value;
					this.SendPropertyChanged("IdVoucher");
					this.OnIdVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameVoucher", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameVoucher
		{
			get
			{
				return this._NameVoucher;
			}
			set
			{
				if ((this._NameVoucher != value))
				{
					this.OnNameVoucherChanging(value);
					this.SendPropertyChanging();
					this._NameVoucher = value;
					this.SendPropertyChanged("NameVoucher");
					this.OnNameVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentVoucher", DbType="Int NOT NULL")]
		public int PercentVoucher
		{
			get
			{
				return this._PercentVoucher;
			}
			set
			{
				if ((this._PercentVoucher != value))
				{
					this.OnPercentVoucherChanging(value);
					this.SendPropertyChanging();
					this._PercentVoucher = value;
					this.SendPropertyChanged("PercentVoucher");
					this.OnPercentVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusVoucher", DbType="Int NOT NULL")]
		public int StatusVoucher
		{
			get
			{
				return this._StatusVoucher;
			}
			set
			{
				if ((this._StatusVoucher != value))
				{
					this.OnStatusVoucherChanging(value);
					this.SendPropertyChanging();
					this._StatusVoucher = value;
					this.SendPropertyChanged("StatusVoucher");
					this.OnStatusVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Bill", Storage="_Bills", ThisKey="IdVoucher", OtherKey="IdVoucher")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
}
#pragma warning restore 1591
